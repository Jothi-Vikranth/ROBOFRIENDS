{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAeeA,EAbF,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,KAAOC,EAAgB,EAAhBA,MAAQC,EAAQ,EAARA,GAE1B,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA2BH,EAA3B,cACrB,gCACI,6BAAKF,IACL,4BAAIC,WCaLK,EAnBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAEf,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAKC,GACb,OACI,cAAC,EAAD,CAEIR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCKlBC,EAdG,SAAC,GAA+B,EAA9BC,YAA+B,IAAnBC,EAAkB,EAAlBA,aAC5B,OACI,qBAAKV,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCAXI,G,MAPA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,SAAU,SAASC,OAAO,kBAAkBC,OAAO,SAAhE,SACKJ,EAAMK,aC6CJC,E,kDA3CX,aAAc,IAAD,8BACT,gBAYJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAACf,YAAYc,EAAME,OAAOC,SAZxC,EAAKC,MAAQ,CACTvB,OAAQ,GACRK,YAAc,IAJT,E,qDAQb,WAAqB,IAAD,OAChBmB,MAAM,8CACLC,MAAK,SAAAC,GAAc,OAAOA,EAASC,UACnCF,MAAK,SAAAG,GAAK,OAAI,EAAKR,SAAS,CAACpB,OAAO4B,S,oBAMzC,WACI,MAA+BC,KAAKN,MAA7BvB,EAAP,EAAOA,OAASK,EAAhB,EAAgBA,YACVyB,EAAiB9B,EAAO+B,QAAO,SAAAC,GACjC,OAAOA,EAAMvC,KAAKwC,cAAcC,SAAS7B,EAAY4B,kBAGzD,OAAKjC,EAAOmC,OAKJ,sBAAKvC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWU,aAAcuB,KAAKX,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUlB,OAAQ8B,SARvB,oBAAIlC,UAAU,KAAd,2B,GAzBDwC,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACL,cAAC,EAAD,IACDC,SAASC,eAAe,SAM3BX,M","file":"static/js/main.601efe58.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = ({name , email , id}) => {\r\n    \r\n    return(\r\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img alt='robots' src ={`https://robohash.org/${id}?200x200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card","import React from \"react\";\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n    \r\n    return(\r\n        <div>\r\n            {\r\n                robots.map((user,i) => {\r\n                    return (\r\n                        <Card \r\n                            key={i} \r\n                            id={robots[i].id} \r\n                            name={robots[i].name} \r\n                            email={robots[i].email}\r\n                            />\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default CardList","import React from \"react\";\r\n\r\nconst SearchBox = ({searchfield,searchChange}) => {\r\n    return(\r\n        <div className=\"pa2\">\r\n            <input \r\n                className=\"pa3 ba b--green bg-lightest-blue\"\r\n                type='search' \r\n                placeholder='search robots' \r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default SearchBox","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflow: 'scroll',border:'1px solid black',height:'800px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n};\r\nexport default Scroll\r\n","import React, {Component} from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll'\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            robots :[],\r\n            searchfield : ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => { return response.json()})\r\n        .then(users => this.setState({robots:users}))\r\n    }\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield:event.target.value})        \r\n    }\r\n\r\n    render() {\r\n        const {robots , searchfield} = this.state\r\n        const filteredRobots = robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        })\r\n        \r\n        if (!robots.length) {\r\n            return <h1 className=\"tc\">LOADING..</h1>\r\n        }\r\n        else {\r\n            return (\r\n                <div className=\"tc\">\r\n                    <h1 className=\"f1\">Robo friends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/ >\r\n                    <Scroll>\r\n                        <CardList robots={filteredRobots} />\r\n                    </Scroll>\r\n                </div>\r\n                \r\n            )    \r\n        }\r\n        \r\n    }\r\n    \r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n    <App /> \n  ,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}